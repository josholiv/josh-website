---
import BaseLayout from '../layouts/BaseLayout.astro';
import ChessStats from '../components/chesscom.tsx';
import Strava from "../components/strava.js";
import ErrorRenderer from "../Error.astro";
import TriathlonStats from '../components/TriathlonStats.jsx';
import { Image } from 'astro:assets';
import aboutMePhoto from '../assets/josh-headshot-cropped.jpg';

const pageTitle = "Hi, I'm Josh!";
const identity = {
  firstName: "Josh",
  country: "United States ðŸ‡ºðŸ‡¸",
  occupation: "lab manager",
  hobbies: ["Triathlons", "Chess", "3D printing", "Yoyos", "TererÃ© ðŸ§‰"],
	};
const hobbyText = identity.hobbies.slice(0, -1).join(", ") + ", and " + identity.hobbies.at(-1);
const currentYear = new Date().getFullYear();

// Display error message if Strava API messes up
let data, error
try {
  const strava = new Strava()
  data = await strava.fetch()
} catch (e) {
  error = e.message
  if (error.includes("401")) {
    throw Error(
      "Something went wrong with the Strava API, try updating your refresh_token",
    )
  }
}
---
<BaseLayout pageTitle={pageTitle} shouldCenterTitle={false} shouldShowTitle={false}>

  <h1>Hi, I'm Josh Olivier!</h1>

   <div class="about-header">
    <Image src={aboutMePhoto} alt="Josh Olivier" class="about-pic" />
    <div class="typewriter-container">
      <span id="typewriter"></span>
    </div>
  </div>

    <script type="module">
        const phrases = [
            "I'm a research assistant interested in memory, aging, and brain imaging.",
            "I use this site to showcase my projects and hobbies.",
            "Find me elsewhere on the web at the links below!",
        ];
        let i = 0;
        let j = 0;
        let isTyping = true;
        let isDeleting = false;
        let pauseDuration = 10000;
        let postDeletePauseDuration = 2000;

        function typeEffect() {
            const element = document.querySelector("#typewriter");
            if (!element) return;

            const currentPhrase = phrases[i];

            if (isTyping) {
                element.innerHTML = currentPhrase.substring(0, j++);
            } else if (isDeleting) {
                element.innerHTML = currentPhrase.substring(0, j--);
            }

            if (isTyping && j === currentPhrase.length + 1) {
                setTimeout(() => {
                    isTyping = false;
                    isDeleting = true;
                    typeEffect();
                }, pauseDuration);
                return;
            } else if (isDeleting && j === -1) {
                setTimeout(() => {
                    i = (i + 1) % phrases.length;
                    isDeleting = false;
                    isTyping = true;
                    typeEffect();
                }, postDeletePauseDuration);
                return;
            }

            const randomSpeed = isDeleting ? 20 : Math.floor(Math.random() * (60 - 20 + 1)) + 20;
            setTimeout(typeEffect, randomSpeed);
        }

        document.addEventListener("DOMContentLoaded", () => {
            setTimeout(typeEffect, 500);
        });
    </script>

  <h2>About me</h2>
    <p>
      I live in the {identity.country} and work as {identity.occupation} of the Functional Neuroimaging 
      of Memory Lab at the University of Texas at Dallas. 
    </p>

    <p>
      I'm interested in studying how brain function, brain structure, 
      and memory are related and how these relationships change across the human lifespan.
    </p>
    
    <p>
      In my free time, I love traveling, trying new foods, 
      and learning new skills. I learned Portuguese
      after spending two years living in northern Brazil ðŸ‡§ðŸ‡·, where I enjoyed eating lots of 
      <a href="https://en.wikipedia.org/wiki/A%C3%A7a%C3%AD_na_tigela" target="_blank"><strong>aÃ§aÃ­</strong></a>, 
      <a href="https://en.wikipedia.org/wiki/Tacac%C3%A1" target="_blank"><strong>tacacÃ¡</strong></a>, and 
      <a href="https://en.wikipedia.org/wiki/Tambaqui" target="_blank"><strong>tambaqui</strong></a>. 
      I'm currently working on learning Spanish.
    </p>

<h2>My hobbies</h2>

<p>Some things I love are:</p>

<ul>
  {identity.hobbies.map(hobby => (
    <li>{hobby}</li>
  ))}
</ul>

	<TriathlonStats client:load data={data} error={error} />
	    <ErrorRenderer error={error} />

  <br></br>
	    
	<ChessStats client:load />

	<p class="footnote">*Data from my <a href="https://www.strava.com/athletes/26573817" target="_blank" rel="noopener noreferrer">Strava</a> profile</p>
	<p class="footnote"><sup>â€ </sup>Data from my <a href="https://www.chess.com/member/pichugang" target="_blank" rel="noopener noreferrer">Chess.com</a> profile</p>     

</BaseLayout>